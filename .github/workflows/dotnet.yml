# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: windows-latest

    strategy:
      matrix:
        platform: [x64,arm64]
        configuration: [Release]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # - name: Free disk space
    #   run: |
    #     echo "Cleaning up runner disk space..."
    #     rd /s /q "C:\Program Files (x86)\Android"
    #     rd /s /q "C:\Program Files\dotnet\packs"

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3

    - name: Install NuGet
      uses: nuget/setup-nuget@v2

    - name: Restore NuGet packages
      run: nuget restore WID.sln

    - name: Decode signing certificate
      run: |
        echo "${{ secrets.SIGNING_CERTIFICATE }}" > cert.txt
        certutil -decode cert.txt MyAppCert.pfx

    - name: Import signing certificate
      run: |
        powershell -command "Import-PfxCertificate -FilePath MyAppCert.pfx -CertStoreLocation Cert:\CurrentUser\My -Password (ConvertTo-SecureString -String '${{ secrets.SIGNING_PASSWORD }}' -AsPlainText -Force)"

    - name: Build UWP project (single-node, no shared compilation)
      run: msbuild WID\WID.csproj /t:Restore,Build /p:Configuration=Release /p:Platform=${{ matrix.platform }} /p:UseSharedCompilation=false /nr:false /m:1 /v:minimal

    - name: Publish project using MSBuild
      run: msbuild WID.sln /p:Configurations=${{ matrix.configuration }} /p:Platform=${{ matrix.platform }} /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxBundle=Always /p:UseSharedCompilation=false /m:1

    - name: Build project using MSBuild
      run: msbuild WID.sln /p:Configurations=${{ matrix.configuration }} /p:Platform=${{ matrix.platform }} /p:UseSharedCompilation=false /m:1